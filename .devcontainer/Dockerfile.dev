# 1) CSS ビルド用ステージ
FROM node:18-alpine AS css-builder
WORKDIR /src
COPY builder/package.json builder/tailwind.config.js builder/postcss.config.js ./
COPY builder/input.css ./src/input.css
RUN npm install
RUN mkdir -p /build/css
RUN npx tailwindcss -i src/input.css -o /build/css/main.css --minify

# 2) 開発コンテナ
FROM python:3.13-slim-bullseye

# 開発用のツールインストール
RUN apt-get update && apt-get install -y \
  git \
  curl \
  vim \
  nano \
  && apt-get clean && rm -rf /var/lib/apt/lists/*

# タイムゾーンをAsia/Tokyoに設定
ENV TZ=Asia/Tokyo
RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone

# Poetryのインストール
RUN curl -sSL https://install.python-poetry.org | python3 - && \
  python3 -m pip install --no-cache-dir --upgrade pip
ENV PATH="/root/.local/bin:$PATH"

# 開発ツールをグローバルにインストール
RUN pip install black isort mypy flake8

WORKDIR /app

# 依存関係ファイルのコピー
COPY pyproject.toml poetry.lock* README.md ./

# 依存関係のインストール
RUN poetry config virtualenvs.create false && \
  poetry install --no-root --no-interaction --no-ansi --with dev
RUN poetry run playwright install --with-deps

# アプリケーションコード（マウントされるので必要ない）

# CSS 成果物をコピー
RUN mkdir -p /app/app/static/css
COPY --from=css-builder /build/css/main.css /app/app/static/css/main.css

# フロントエンドライブラリの取得
RUN mkdir -p /app/app/static/js && \
  curl -Lo /app/app/static/js/htmx.min.js https://unpkg.com/htmx.org/dist/htmx.min.js && \
  curl -Lo /app/app/static/js/alpine.min.js https://unpkg.com/alpinejs@3.12.0/dist/cdn.min.js

EXPOSE 8000

# 開発サーバー起動（ホットリロード有効）
CMD ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"] 