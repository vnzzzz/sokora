---
description: 
globs: 
alwaysApply: true
---
---
description: FastAPIプロジェクト向けのPythonコーディングスタイルガイド（PEP 8 + FastAPIベストプラクティス）
globs: app/**/*.py
alwaysApply: true
---

- **関数の責務**: 関数は単一の責務に限定し、必要に応じて関数を分割することで可読性と再利用性を高める。
- **型アノテーション**: すべての関数の引数と戻り値に型アノテーションを明示的に記述する。
- **ログ出力**: デバッグや情報の出力には `logging` モジュールを使用し、`print()` 関数の使用は避ける。
- **命名規則**: 関数名や変数名は `snake_case`、クラス名は `PascalCase` を使用し、定数は `UPPER_CASE` を用いる。
- **共通処理の整理**: 同様の処理が複数存在する場合は、ヘルパー関数として `utils/` ディレクトリ内の適切なモジュールに切り出す。
- **コメントの記述**:
  - コードの意図や背景を明確にするため、適切な粒度で日本語のコメントを記述する。
  - コメントのトーンは、丁寧で明確な表現を心がける。
  - 専門用語や一般的な技術用語（例：モジュール、クラス）は、適切に英語表記を使用する。
- **docstringの活用**: 関数やクラスには、PEP 257に準拠したdocstringを記述し、引数、戻り値、例外、使用例などを明確にする。
- **行の長さ**: 1行の長さは最大79文字とし、必要に応じて適切に改行を行う。
- **インポートの順序**: インポート文は、標準ライブラリ、サードパーティライブラリ、ローカルモジュールの順に記述し、各セクションを空行で区切る。
- **FastAPIのタグ**: FastAPIの `/docs` に表示されるタグ名は、英語を使用し、APIドキュメントの一貫性と可読性を保つ。
